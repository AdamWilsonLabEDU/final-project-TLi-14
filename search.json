[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Final Project Template",
    "section": "",
    "text": "Introduction\n[~ 200 words]\nClearly stated background and questions / hypotheses / problems being addressed. Sets up the analysis in an interesting and compelling way. Include figures if you like.\n\n\nMaterials and methods\n[~ 200 words]\nNarrative: Clear narrative description of the data sources and methods. Includes data from at least two sources that were integrated / merged in R.\nCode: The code associated with the project is well organized and easy to follow. Demonstrates mastery of R graphics and functions.\nData: The underlying data are publicly accessible via the web and downloaded/accessed within the Rmd script. If you want to use your own data, you must make it available on a website (e.g. Figshare) so that others are able to re-run your code.\nYou can do bullets like this:\n\nThe first most important thing\nThe second most important thing\nThe third most important thing\n\nYou can do numbers like this:\n\nThe first most important thing\nThe second most important thing\nThe third most important thing\n\nSee http://rmarkdown.rstudio.com/ for all the amazing things you can do.\n\nSetup and Download Environmental data\n\n\n# Install and load necessary packages\n# install.packages(c(\"terra\", \"geodata\"))\nlibrary(googledrive)\nlibrary(terra)\nlibrary(geodata)\n\n# Specify the download path\ndownload_path &lt;- \"E:/UB_Master/24fall/GEO511 Spatial/Final_project/Final_Project\"\n\n# Download elevation data (Elevation)\nelevation &lt;- worldclim_global(var = \"elev\", res = 2.5, path = download_path) \n\n# Download Bioclimatic variables data\n# WorldClim Bioclimatic variables (typically from bio1 to bio19)\nbioclimatic_vars &lt;- worldclim_global(var = \"bio\", res = 2.5, path = download_path)  \n\n# Check and visualize Bioclimatic variables data\nprint(bioclimatic_vars)\nplot(bioclimatic_vars[[1]], main = \"Bio1: Annual Mean Temperature\")\n\n# Combine the elevation data and Bioclimatic variables into one raster stack\nclimate_stack &lt;- c(elevation, bioclimatic_vars)  \n\n# Check and visualize the merged raster stack\nprint(climate_stack)\nplot(climate_stack[[1]], main = \"Global Elevation\")\n\n\nCrop and Mask Raster Stack for Land Areas\n\n\n# Load necessary libraries\n# install.packages(\"rnaturalearth\")\nlibrary(terra)\nlibrary(rnaturalearth)\n\n# Load or create the climate and elevation raster stack\n# Assuming climate_stack has already been created\n\n# Download global land shapefile\nland &lt;- ne_download(scale = \"medium\", type = \"land\", category = \"physical\", returnclass = \"sf\")\n\n# Crop and mask raster stack to include only land areas\nclimate_stack_cropped &lt;- crop(climate_stack, ext(land))\nclimate_stack_land &lt;- mask(climate_stack_cropped, vect(land))\n\n# Visualize the results\nplot(climate_stack_land[[1]], main = \"Cropped and Masked Elevation (Land Only)\")\n\n\nPrepare Takakia Occurrence Data\n\n\n# install.packages(\"rgbif\")\n# install.packages(\"rnaturalearthdata\")\n\nlibrary(rgbif)\nlibrary(ggplot2)\nlibrary(rnaturalearthdata)\n\n# Define the species name\nspecies_name &lt;- \"Takakia S.Hatt. & Inoue\"\n\n# Retrieve occurrence data\ngbif_data &lt;- occ_search(scientificName = species_name, limit = 2000)\n\n# Extract longitude and latitude from the data\noccurrences &lt;- data.frame(\n  lon = gbif_data$data$decimalLongitude,\n  lat = gbif_data$data$decimalLatitude\n)\n\n# Remove rows with missing coordinates\noccurrences_clean &lt;- na.omit(occurrences)\n\n# Remove duplicate coordinates\noccurrences_unique &lt;- occurrences_clean[!duplicated(occurrences_clean), ]\n\n# Check the number of unique points\ncat(\"Number of unique occurrence points:\", nrow(occurrences_unique), \"\\n\")\n\n# Load world map for background\nworld_map &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Plot unique occurrence points\nggplot() +\n  geom_sf(data = world_map, fill = \"lightgray\", color = \"black\") +\n  geom_point(data = occurrences_unique, aes(x = lon, y = lat), color = \"red\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Unique Distribution Points of Takakia S.Hatt. & Inoue\",\n       x = \"Longitude\",\n       y = \"Latitude\")\n\n# Save the unique occurrence data to a CSV file\nwrite.csv(occurrences_unique, \"Takakia_Unique_Distribution_Data.csv\", row.names = FALSE)\n\n\nMaxEnt Model for Takakia Distribution Prediction\n\n\n# Install required packages (if not already installed)\n# install.packages(c(\"dismo\", \"rJava\"))\nlibrary(dismo)\nlibrary(terra)\nlibrary(sf)\nlibrary(rJava)\nlibrary(raster)\n\noptions(java.parameters = \"-Xmx8g\")\n\n# Assuming climate_stack_land is prepared and cleaned (using all layers in the stack)\n# No need to subset the layers as we will use all the variables from climate_stack_land\nselected_env_stack &lt;- climate_stack_land\n\n# Ensure occurrences_unique is an sf object with coordinates\noccurrences_sf &lt;- st_as_sf(occurrences_unique, coords = c(\"lon\", \"lat\"), crs = crs(selected_env_stack))\n\n# Convert SpatRaster to RasterStack (if it's not already in stack format)\nselected_env_stack &lt;- stack(selected_env_stack)\n\n# Extract coordinates from the sf object\noccurrences_matrix &lt;- as.matrix(st_coordinates(occurrences_sf))\n\n# Extract environmental values at occurrence points\nenv_values &lt;- extract(selected_env_stack, occurrences_matrix)\n\n# Combine occurrences with extracted environmental data\nocc_with_env &lt;- cbind(occurrences_matrix, env_values)\n\n# Remove rows with NA predictor values\nocc_with_env &lt;- na.omit(occ_with_env)\n\n# Separate cleaned occurrences and predictor values\noccurrences_matrix_clean &lt;- occ_with_env[, 1:2]  # First two columns are longitude and latitude\n\n# Train the MaxEnt model (with all variables)\nmaxent_model &lt;- maxent(\n  x = selected_env_stack, \n  p = occurrences_matrix_clean\n)\n\n# Summary of the model\nsummary(maxent_model)\n\n# Predict the current distribution\ncurrent_distribution &lt;- predict(maxent_model, selected_env_stack)\n\n# Visualize the prediction\nplot(current_distribution, main = \"Predicted Current Distribution of Takakia\")\n\n# Save the predicted distribution as a GeoTIFF file\nwriteRaster(current_distribution, filename = \"Takakia_Current_Distribution.tif\", overwrite = TRUE)\n\n# Split data into training and testing sets\nset.seed(123)\ntrain_indices &lt;- sample(1:nrow(occurrences_matrix), size = 0.75 * nrow(occurrences_matrix))\ntrain_data &lt;- occurrences_matrix[train_indices, ]\ntest_data &lt;- occurrences_matrix[-train_indices, ]\n\n# Evaluate the model\neval &lt;- evaluate(maxent_model, p = train_data, a = test_data, x = selected_env_stack)\nprint(eval)\n\n# Plot the receiver operating characteristic (ROC) curve\nplot(eval, \"ROC\")\n\n# Perform Jackknife to evaluate the importance of each environmental variable\n# Use the 'maxent' model with jackknife = TRUE\njackknife_results &lt;- dismo::maxent(\n  x = selected_env_stack, \n  p = occurrences_matrix_clean,\n  jackknife = TRUE\n)\n\n# Extract Jackknife results from the 'maxent' object using the appropriate method\n# Jackknife results are contained in the model object itself, accessible by using the 'maxent' method:\njackknife_importance &lt;- jackknife_results@results\n\n# Display the Jackknife importance values for each variable\nprint(jackknife_importance)\n\nAdd any additional processing steps here.\n\n\nResults\n[~200 words]\nTables and figures (maps and other graphics) are carefully planned to convey the results of your analysis. Intense exploration and evidence of many trials and failures. The author looked at the data in many different ways before coming to the final presentation of the data.\nShow tables, plots, etc. and describe them. ```\n\n\nConclusions\n[~200 words]\nClear summary adequately describing the results and putting them in context. Discussion of further questions and ways to continue investigation.\n\n\nReferences\nAll sources are cited in a consistent manner"
  },
  {
    "objectID": "data/Readme.html",
    "href": "data/Readme.html",
    "title": "GEO511_FinalProject",
    "section": "",
    "text": "Place any data needed by your analysis in this folder. Please do not store large files here. Then read in any data using the ‘data’ path. For example, read_csv(\"data/data.csv\")."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]